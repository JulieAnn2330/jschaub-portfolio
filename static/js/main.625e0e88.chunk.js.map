{"version":3,"sources":["components/Portfolio/Portfolio.js","components/Navigation.js","components/Contact.js","components/About.js","components/Home.js","components/Footer.js","App.js","serviceWorker.js","index.js","images/Fullsize Images/Julie Schaub Resume.pdf","images/Fullsize Images/Technical-Writing-Sample.pdf","images/computer-keyboard-blue_2.jpg","images/new-profile-pic.png","images/Trips2.PNG","images/Cocktail_Coterie.PNG","images/Nasa.PNG","images/GoogleBooks.PNG","images/Employee.PNG","images/Burger.PNG"],"names":["Portfolio","useState","dots","infinite","speed","slidesToShow","slidesToScroll","settings","products","img","require","title","description","technologies","deploy","git","className","Helmet","map","x","i","key","src","alt","class","href","target","Styles","styled","div","Navigation","Navbar","expand","Toggle","aria-controls","Collapse","id","Nav","Item","to","Contact","fieldErrors","setFieldErrors","validationRules","email","val","test","message","validate","errors","hasErrors","Object","keys","inputs","prev","renderFieldError","field","useEffect","length","setInputs","handleOnChange","event","persist","value","submitting","status","serverState","setServerState","handleServerResponse","ok","msg","Col","xs","lg","Resume","Writing","onSubmit","preventDefault","axios","method","url","data","then","r","catch","response","error","noValidate","htmlFor","type","name","onChange","disabled","md","Image","Keyboard","About","Row","PortfolioPic","Home","Footer","style","color","textAlign","App","Fragment","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","module","exports"],"mappings":"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","file":"static/js/main.625e0e88.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Slider from \"react-slick\";\nimport {Helmet} from 'react-helmet';\n\n// Import css files\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nexport function Portfolio() {\n  const config = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 1\n  };\n\n  const [settings] = useState(config);\n\n  const products = [\n    {\n      img: require('../../images/Trips2.PNG'),\n      title: 'Project 3 - Destination Globetrotter',\n      description: 'Description of Project: Destination Globetrotter is the travel planning app for High School Reunions, Family Reunions and other group travel! Discover a collaborative approach to travel planning through in-app group messaging and personal invites to trips!',\n      technologies: 'Technologies Used: Axios, bCrypt, Bootstrap, CSS, HTML, Express, MySQL, Node, Path, Passport, PubNub API, React, Sequelize, Tequila API',\n      deploy: \"https://destinationglobetrotter.herokuapp.com/\" ,\n      git: \"https://github.com/JulieAnn2330/destination-globetrotter-2330\"\n    },\n    {\n      img: require('../../images/Cocktail_Coterie.PNG'),\n      title: 'Project 2 - Cocktail_Coterie',\n      description: 'Description of Project: This app allows the user in seclusion during the covid pandemic to socialize with friends while staying safe at home. The user can organize an online cocktail party and stay socially connected with friends. Searching for a favorite cocktail by ingredient will bring up recipes containing that ingredient.',\n      technologies: 'Technologies Used: Axios, bCrypt, Bootstrap, Express, Express-Session, Handlebars, Javascript, jQuery, Node, Node FS, Passport, Sequelize',\n      deploy: \"https://cocktail-coterie.herokuapp.com/\" ,\n      git: \"https://github.com/JulieAnn2330/cocktail_coterie\"\n    },\n    {\n      img: require('../../images/Nasa.PNG'),\n      title: 'Project 1 - Spacex/NASA Flight Data',\n      description: 'Description of Project: This interactive site provides information about NASA, SpaceX and their relative flight data information. Explore the history of NASA and SpaceX with interactive timelines that include links for additional organizational and mission detail, or pick a mission from the dropdown and click the link in the data table to view specific mission details.',\n      technologies:'Technologies Used: HTML, Bulma, CSS, Javascript, jQuery, AJAX, API Calls NASA, SpaceX and DarkSky, moment.js',\n      deploy: \"https://reidbuckingham48.github.io/spacex-nasa-flight-data/\",\n      git: \"https://github.com/JulieAnn2330/spacex-nasa-flight-data\"\n    },\n    {\n      img: require('../../images/GoogleBooks.PNG'),\n      title: 'Google Book Library',\n      description: 'Description of Project: This interactive application allows the user to create a library of saved books using the GoogleBooks API call. Users can view the books on the GoogleBooks site, save books to their library and remove books from their library.',\n      technologies:'Technologies Used: API Calls, Axios, Bootstrap, CSS, Heroku, HTML, JavaScript, mongoDB, node.js, React',\n      deploy: \"https://vast-peak-23165.herokuapp.com/\",\n      git: \"https://github.com/JulieAnn2330/Google-Books-Library\"\n    },\n    {\n      img: require('../../images/Employee.PNG'),\n      title: 'Midtown Full Stack Employee Directory',\n      description: 'Description of Project: This project allows employees in a company to view non-sensitive information about company employees. The directory can be sorted by any column.',\n      technologies: 'Technologies Used: React',\n      deploy: \"https://julieann2330.github.io/Midtown-Full-Stack-Employee-Directory/\",\n      git: \"https://github.com/JulieAnn2330/Midtown-Full-Stack-Employee-Directory\"\n    },\n    {\n      img: require('../../images/Burger.PNG'),\n      title: 'Eat-Da-Burger',\n      description: 'Description of Project: This interactive application takes users through a restaurant experience. Users can order the burger of their choice, devour the burger and trash the burger all with the click of a button.',\n      technologies: 'Technologies Used: AJAX, CSS, Express, Handlebars, HTML, JavaScript, MySQL, Node, ORM',\n      deploy: \"https://afternoon-plains-66165.herokuapp.com/\",\n      git:\"https://github.com/JulieAnn2330/burger-logger\"\n    }\n  ]\n\n  // const onChangeCenterMode = e => {\n  //   if (e.target.checked) {\n  //     setSettings({\n  //       ...config,\n  //       centerMode: true,\n  //       centerPadding: '50px'\n  //     });\n  //   } else {\n  //     setSettings(config);\n  //   }\n  // }\n\n  return (\n    <div className=\"App\">\n    <Helmet>\n    <style>{'body { background-color: black; }'}</style>\n    </Helmet>\n    <h1 className=\"portfolioLabel\">Portfolio Work</h1>\n      {/* <h3>Carousel Slider in React - <a href=\"https://www.cluemediator.com\" target=\"_blank\">Clue Mediator</a></h3>\n\n      <label className=\"cb-centermode\">\n        <input type=\"checkbox\" checked={settings.centerMode} onChange={onChangeCenterMode} />\n        <span>Enable Center Mode</span>\n      </label> */}\n\n      <Slider {...settings}>\n        {products.map((x, i) => {\n          return <div key={i} className=\"img-card\">\n            <img className=\"img\" src={x.img} alt=\"project\" />\n            <div class=\"card-body\">\n              <div className=\"card-title\">{x.title}</div>\n              <div className=\"card-text\">{x.description}</div>\n              <div className=\"card-text\">{x.technologies}</div>\n              <div className=\"card-text\"><a href={x.deploy} target=\"blank\">Link to Deployed Project</a></div>\n              <div className=\"card-text\"><a href={x.git} target=\"blank\">Link to GitHub Repo</a></div>\n            </div>\n          </div>\n        })}\n      </Slider>\n    </div>\n  );\n}\n\nexport default Portfolio;\n","import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Styles = styled.div`\n  .navbar { background-color: transparent}\n  a, .navbar-nav, .navbar-light .nav-link {\n    color: white;\n        &:hover { color: red; };\n        &:visited { color: blue }\n  `;\nexport const Navigation = () => (\n  <Styles>\n    <Navbar expand=\"lg\">\n     <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <Nav.Item><Link to=\"/\">Home</Link></Nav.Item>\n          <Nav.Item><Link to=\"/about\">About</Link></Nav.Item>\n          <Nav.Item><Link to=\"/portfolio\">Portfolio</Link></Nav.Item>\n          <Nav.Item><Link to=\"/contact\">Contact</Link></Nav.Item> \n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </Styles>\n)\n\nexport default Navigation","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Col from 'react-bootstrap/Col'; \nimport {Helmet} from 'react-helmet';\nimport Image from 'react-bootstrap/Image'; \nimport Resume from '../images/Fullsize Images/Julie Schaub Resume.pdf';\nimport Writing from '../images/Fullsize Images/Technical-Writing-Sample.pdf';\nimport Keyboard from '../images/computer-keyboard-blue_2.jpg';\n\nexport function Contact() {\n\n  /* NEW: validation for inputs vvvv */\n  const [fieldErrors, setFieldErrors] = useState({});\n  const validationRules = {\n    email: val => val && /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(val),\n    message: val => !!val\n  };\n  const validate = () => {\n    let errors = {};\n    let hasErrors = false;\n    for (let key of Object.keys(inputs)) {\n      errors[key] = !validationRules[key](inputs[key]);\n      hasErrors |= errors[key];\n    }\n    setFieldErrors(prev => ({ ...prev, ...errors }));\n    return !hasErrors;\n  };\n  const renderFieldError = field => {\n    if (fieldErrors[field]) {\n      return <p className=\"errorMsg\">Please enter a valid {field}.</p>;\n    }\n  };\n  useEffect(() => {\n    // Only perform interactive validation after submit\n    if (Object.keys(fieldErrors).length > 0) {\n      validate();\n    }\n  });\n  /* End new validation ^^^^ */\n\n  // Input Change Handling\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    message: \"\"\n  });\n  const handleOnChange = event => {\n    event.persist();\n    setInputs(prev => ({\n      ...prev,\n      [event.target.id]: event.target.value\n    }));\n  };\n\n  // Server State Handling\n  const [serverState, setServerState] = useState({\n    submitting: false,\n    status: null\n  });\n  const handleServerResponse = (ok, msg) => {\n    setServerState({\n      submitting: false,\n      status: { ok, msg }\n    });\n    if (ok) {\n      setFieldErrors({});\n      setInputs({\n        email: \"\",\n        message: \"\"\n      });\n    }\n  };\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    if (!validate()) {\n      return;\n    }\n    setServerState({ submitting: true });\n    axios({\n      method: \"POST\",\n      url: \"https://formspree.io/xwkryppl\",\n      data: inputs\n    })\n      .then(r => {\n        handleServerResponse(true, \"Thanks!\");\n      })\n      .catch(r => {\n        handleServerResponse(false, r.response.data.error);\n      });\n  };\n\n  return (\n    <div>\n      <Helmet>\n         <style>{'body { background-color: black; }'}</style>\n      </Helmet>\n      <Col xs lg=\"6\">\n         <ul class=\"is-bullet\">\n           <li><b>Email:</b> <a href=\"mailto:julie.schaub@midtownfullstack.com\" target=\"blank\" class=\"link\">julie.schaub@midtownfullstack.com</a></li>\n           <li><a class=\"link\" href=\"https://github.com/JulieAnn2330\" target=\"blank\">Link to GitHub Repositories</a></li>\n           <li><a class=\"link\" href=\"https://www.linkedin.com/in/julie-schaub\" target=\"blank\">LinkedIn Profile</a></li>\n          <li><a class=\"link\" href={ Resume } target=\"blank\">Resume</a></li>\n          <li><a class=\"link\" href={ Writing } target=\"blank\">Technical Writing Sample</a></li>\n          <li><b>Cell/Text:</b> 913.284.6548</li>\n          <li><b>Location:</b> Midtown, Kansas City, MO</li>\n        </ul>\n        </Col>\n\n      <Col xs lg=\"6\">\n         <h1 className=\"contactLabel\">Contact Me</h1>\n         <form onSubmit={handleOnSubmit} noValidate>\n         <label htmlFor=\"email\" className=\"emailLabel\">Email:</label>\n         <input\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            onChange={handleOnChange}\n            value={inputs.email}\n            className={fieldErrors.email ? \"error\" : \"\"}\n         />\n         {renderFieldError(\"email\")}\n         <br></br>\n         <label htmlFor=\"message\" className=\"messageLabel\">Message:</label>\n         <textarea\n            id=\"message\"\n            name=\"message\"\n            onChange={handleOnChange}\n            value={inputs.message}\n            className={fieldErrors.message ? \"error\" : \"\"}\n         ></textarea>\n         {renderFieldError(\"message\")}\n         <br></br>\n         <button type=\"submit\" disabled={serverState.submitting} className=\"button\">\n            Submit\n         </button>\n         {serverState.status && (\n            <p className={!serverState.status.ok ? \"errorMsg\" : \"\"}>\n               {serverState.status.msg}\n            </p>\n         )}\n         </form>\n      </Col>\n      <Col xs={6} md={4}>\n      <Image className=\"keyboard\" src={ Keyboard } />\n    </Col>\n    </div>\n   );\n};\n\nexport default Contact","import React from 'react';\nimport Col from 'react-bootstrap/Col'; \nimport Row from 'react-bootstrap/Row';\nimport {Helmet} from 'react-helmet';\nimport PortfolioPic from '../images/new-profile-pic.png'\n\nexport const About = () => {\n    return (\n\n   <div>   \n   <Helmet>\n   <style>{'body { background-color: black; }'}</style>\n   </Helmet>\n    <Row>\n    <Col md=\"auto\"><img className=\"imageProfile\" src={ PortfolioPic } alt=\"Julie Ann Schaub\"></img></Col>\n    <Col xs lg=\"6\"><p className=\"aboutMeTitle\">About Me</p>\n              <p className=\"aboutMe\">I'm a Full Stack Web Developer with a background in education, \n                customer service and management. Recently earned a certificate in Full Stack \n                Development from the University of Kansas Coding Boot Camp, with newly developed skills in SQL, JavaScript, \n                HTML, CSS, React, and certificates in Agile Foundations and Project Management \n                Foundations. Known as a detail-oriented, innovative problem-solver, passionate about \n                coding and debugging to ensure a more intuitive end-user experience. Successfully worked \n                with an experienced software team developing a proprietary, web-based interface for 600 \n                users. Excited to leverage skills in the future as part of a fast-paced, quality-driven team \n                in order to build better experiences on the web.</p></Col>\n    </Row>\n    </div>\n     \n    );\n}\n \nexport default About;","import React from 'react';\nimport {Helmet} from 'react-helmet';\n\nexport const Home = () => (\n<div className=\"bg_image\">\n    <Helmet>\n      <style>{'body { background-color: black; }'}</style>\n    </Helmet>\n    <h1 className=\"title\">Julie Schaub</h1>\n    <h3 className=\"subtitle\">Professional Portfolio</h3>\n</div>\n\n);\n\n\nexport default Home;","import React from 'react';\n\nfunction Footer() {\n    return <div style={{color: \"white\", textAlign:\"center\"}}>Created by Julie Schaub, University of Kansas Full Stack Boot Camp, October 2020</div>\n}\n\nexport default Footer;","import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport \"./styles.css\";\nimport React from \"react\";\nimport { Portfolio } from './components/Portfolio/Portfolio';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Navigation } from './components/Navigation';\nimport { Contact } from './components/Contact';\nimport { About } from './components/About';\nimport { Home } from './components/Home';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <React.Fragment>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Navigation />\n      <Switch>\n  <Route exact path=\"/\" component={Home} />\n  <Route  path=\"/about\" component={About} />\n  <Route  path=\"/portfolio\" component={Portfolio} />\n  <Route  path=\"/contact\" component={Contact} />\n </Switch>\n    <Footer />\n    </Router>\n  </React.Fragment>\n\n  );\n}             \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './components/Portfolio/portfolio.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Julie Schaub Resume.ede93ccf.pdf\";","module.exports = __webpack_public_path__ + \"static/media/Technical-Writing-Sample.71996e20.pdf\";","module.exports = __webpack_public_path__ + \"static/media/computer-keyboard-blue_2.9006be49.jpg\";","module.exports = __webpack_public_path__ + \"static/media/new-profile-pic.59ff292c.png\";","module.exports = __webpack_public_path__ + \"static/media/Trips2.c176ee07.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Cocktail_Coterie.1e4911de.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Nasa.ddf55214.PNG\";","module.exports = __webpack_public_path__ + \"static/media/GoogleBooks.02e716cc.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Employee.8719ad35.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Burger.07a6ffb5.PNG\";"],"sourceRoot":""}